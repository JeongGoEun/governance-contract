{
  "contractName": "EnvStorage",
  "abi": [
    {
      "constant": true,
      "inputs": [
        {
          "name": "h",
          "type": "bytes32"
        }
      ],
      "name": "getAddress",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "h",
          "type": "bytes32"
        },
        {
          "name": "v",
          "type": "bytes"
        }
      ],
      "name": "setBytes",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "h",
          "type": "bytes32"
        }
      ],
      "name": "getBoolean",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "REG",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "h",
          "type": "bytes32"
        },
        {
          "name": "v",
          "type": "int256"
        }
      ],
      "name": "setInt",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "GOV_NAME",
      "outputs": [
        {
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "h",
          "type": "bytes32"
        },
        {
          "name": "v",
          "type": "string"
        }
      ],
      "name": "setString",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "h",
          "type": "bytes32"
        }
      ],
      "name": "getString",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_addr",
          "type": "address"
        }
      ],
      "name": "setRegistry",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getImplementation",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "h",
          "type": "bytes32"
        }
      ],
      "name": "getUint",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "h",
          "type": "bytes32"
        }
      ],
      "name": "getBytes",
      "outputs": [
        {
          "name": "",
          "type": "bytes"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "h",
          "type": "bytes32"
        },
        {
          "name": "v",
          "type": "address"
        }
      ],
      "name": "setAddress",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "h",
          "type": "bytes32"
        }
      ],
      "name": "getInt",
      "outputs": [
        {
          "name": "",
          "type": "int256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "h",
          "type": "bytes32"
        },
        {
          "name": "v",
          "type": "uint256"
        }
      ],
      "name": "setUint",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "h",
          "type": "bytes32"
        },
        {
          "name": "v",
          "type": "bool"
        }
      ],
      "name": "setBoolean",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    }
  ],
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "pragma solidity ^0.4.24;\nimport \"./EternalStorage.sol\";\nimport \"../GovChecker.sol\";\nimport \"../Impl.sol\";\ncontract EnvStorage is Impl, EternalStorage, GovChecker {\n    \n    /**\n     * @dev Fallback function for delegate call. This function will return whatever the implementaion call returns\n     */\n    function () public payable onlyGov(){\n        \n        address _impl = getImplementation();\n        require(_impl != address(0), \"Invalid Address\");\n\n        assembly {\n            let ptr := mload(0x40)\n            calldatacopy(ptr, 0, calldatasize)\n\n            let result := delegatecall(gas, _impl, ptr, calldatasize, 0, 0)\n            let size := returndatasize\n            returndatacopy(ptr, 0, size)\n\n            switch result\n            case 0 { revert(ptr, size) }\n            default { return(ptr, size) }\n\n        }\n    }\n}",
  "sourcePath": "/Users/hexoul/Documents/Metadium/governance/governance-contract/contracts/storage/EnvStorage.sol",
  "ast": {
    "absolutePath": "/Users/hexoul/Documents/Metadium/governance/governance-contract/contracts/storage/EnvStorage.sol",
    "exportedSymbols": {
      "EnvStorage": [
        402
      ]
    },
    "id": 403,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 371,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:8"
      },
      {
        "absolutePath": "/Users/hexoul/Documents/Metadium/governance/governance-contract/contracts/storage/EternalStorage.sol",
        "file": "./EternalStorage.sol",
        "id": 372,
        "nodeType": "ImportDirective",
        "scope": 403,
        "sourceUnit": 633,
        "src": "25:30:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/hexoul/Documents/Metadium/governance/governance-contract/contracts/GovChecker.sol",
        "file": "../GovChecker.sol",
        "id": 373,
        "nodeType": "ImportDirective",
        "scope": 403,
        "sourceUnit": 78,
        "src": "56:27:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/hexoul/Documents/Metadium/governance/governance-contract/contracts/Impl.sol",
        "file": "../Impl.sol",
        "id": 374,
        "nodeType": "ImportDirective",
        "scope": 403,
        "sourceUnit": 126,
        "src": "84:21:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 375,
              "name": "Impl",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 125,
              "src": "129:4:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Impl_$125",
                "typeString": "contract Impl"
              }
            },
            "id": 376,
            "nodeType": "InheritanceSpecifier",
            "src": "129:4:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 377,
              "name": "EternalStorage",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 632,
              "src": "135:14:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EternalStorage_$632",
                "typeString": "contract EternalStorage"
              }
            },
            "id": 378,
            "nodeType": "InheritanceSpecifier",
            "src": "135:14:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 379,
              "name": "GovChecker",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 77,
              "src": "151:10:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GovChecker_$77",
                "typeString": "contract GovChecker"
              }
            },
            "id": 380,
            "nodeType": "InheritanceSpecifier",
            "src": "151:10:8"
          }
        ],
        "contractDependencies": [
          77,
          125,
          632,
          688
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 402,
        "linearizedBaseContracts": [
          402,
          77,
          632,
          688,
          125
        ],
        "name": "EnvStorage",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 400,
              "nodeType": "Block",
              "src": "340:498:8",
              "statements": [
                {
                  "assignments": [
                    386
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 386,
                      "name": "_impl",
                      "nodeType": "VariableDeclaration",
                      "scope": 401,
                      "src": "359:13:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 385,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "359:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 389,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 387,
                      "name": "getImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105,
                      "src": "375:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "375:19:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "359:35:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 391,
                          "name": "_impl",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 386,
                          "src": "412:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 393,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "429:1:8",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 392,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "421:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "421:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "412:19:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c69642041646472657373",
                        "id": 396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "433:17:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf1d1ce89873b65be77a5b8cf3294e4a6e07f1b811e1034d1cd601ee4593d845",
                          "typeString": "literal_string \"Invalid Address\""
                        },
                        "value": "Invalid Address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bf1d1ce89873b65be77a5b8cf3294e4a6e07f1b811e1034d1cd601ee4593d845",
                          "typeString": "literal_string \"Invalid Address\""
                        }
                      ],
                      "id": 390,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        706,
                        707
                      ],
                      "referencedDeclaration": 707,
                      "src": "404:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "404:47:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 398,
                  "nodeType": "ExpressionStatement",
                  "src": "404:47:8"
                },
                {
                  "externalReferences": [
                    {
                      "_impl": {
                        "declaration": 386,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "600:5:8",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 399,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    let ptr := mload(0x40)\n    calldatacopy(ptr, 0, calldatasize())\n    let result := delegatecall(gas(), _impl, ptr, calldatasize(), 0, 0)\n    let size := returndatasize()\n    returndatacopy(ptr, 0, size)\n    switch result\n    case 0 {\n        revert(ptr, size)\n    }\n    default {\n        return(ptr, size)\n    }\n}",
                  "src": "462:376:8"
                }
              ]
            },
            "documentation": "@dev Fallback function for delegate call. This function will return whatever the implementaion call returns",
            "id": 401,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 383,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 382,
                  "name": "onlyGov",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 67,
                  "src": "331:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "331:9:8"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 381,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "313:2:8"
            },
            "payable": true,
            "returnParameters": {
              "id": 384,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "340:0:8"
            },
            "scope": 402,
            "src": "304:534:8",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 403,
        "src": "106:734:8"
      }
    ],
    "src": "0:840:8"
  },
  "legacyAST": {
    "absolutePath": "/Users/hexoul/Documents/Metadium/governance/governance-contract/contracts/storage/EnvStorage.sol",
    "exportedSymbols": {
      "EnvStorage": [
        402
      ]
    },
    "id": 403,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 371,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".24"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:8"
      },
      {
        "absolutePath": "/Users/hexoul/Documents/Metadium/governance/governance-contract/contracts/storage/EternalStorage.sol",
        "file": "./EternalStorage.sol",
        "id": 372,
        "nodeType": "ImportDirective",
        "scope": 403,
        "sourceUnit": 633,
        "src": "25:30:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/hexoul/Documents/Metadium/governance/governance-contract/contracts/GovChecker.sol",
        "file": "../GovChecker.sol",
        "id": 373,
        "nodeType": "ImportDirective",
        "scope": 403,
        "sourceUnit": 78,
        "src": "56:27:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/hexoul/Documents/Metadium/governance/governance-contract/contracts/Impl.sol",
        "file": "../Impl.sol",
        "id": 374,
        "nodeType": "ImportDirective",
        "scope": 403,
        "sourceUnit": 126,
        "src": "84:21:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 375,
              "name": "Impl",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 125,
              "src": "129:4:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Impl_$125",
                "typeString": "contract Impl"
              }
            },
            "id": 376,
            "nodeType": "InheritanceSpecifier",
            "src": "129:4:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 377,
              "name": "EternalStorage",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 632,
              "src": "135:14:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EternalStorage_$632",
                "typeString": "contract EternalStorage"
              }
            },
            "id": 378,
            "nodeType": "InheritanceSpecifier",
            "src": "135:14:8"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 379,
              "name": "GovChecker",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 77,
              "src": "151:10:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_GovChecker_$77",
                "typeString": "contract GovChecker"
              }
            },
            "id": 380,
            "nodeType": "InheritanceSpecifier",
            "src": "151:10:8"
          }
        ],
        "contractDependencies": [
          77,
          125,
          632,
          688
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": false,
        "id": 402,
        "linearizedBaseContracts": [
          402,
          77,
          632,
          688,
          125
        ],
        "name": "EnvStorage",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 400,
              "nodeType": "Block",
              "src": "340:498:8",
              "statements": [
                {
                  "assignments": [
                    386
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 386,
                      "name": "_impl",
                      "nodeType": "VariableDeclaration",
                      "scope": 401,
                      "src": "359:13:8",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 385,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "359:7:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 389,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 387,
                      "name": "getImplementation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 105,
                      "src": "375:17:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                        "typeString": "function () view returns (address)"
                      }
                    },
                    "id": 388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "375:19:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "359:35:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 391,
                          "name": "_impl",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 386,
                          "src": "412:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "hexValue": "30",
                              "id": 393,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "429:1:8",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 392,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "421:7:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": "address"
                          },
                          "id": 394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "421:10:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "412:19:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e76616c69642041646472657373",
                        "id": 396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "433:17:8",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bf1d1ce89873b65be77a5b8cf3294e4a6e07f1b811e1034d1cd601ee4593d845",
                          "typeString": "literal_string \"Invalid Address\""
                        },
                        "value": "Invalid Address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bf1d1ce89873b65be77a5b8cf3294e4a6e07f1b811e1034d1cd601ee4593d845",
                          "typeString": "literal_string \"Invalid Address\""
                        }
                      ],
                      "id": 390,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        706,
                        707
                      ],
                      "referencedDeclaration": 707,
                      "src": "404:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "404:47:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 398,
                  "nodeType": "ExpressionStatement",
                  "src": "404:47:8"
                },
                {
                  "externalReferences": [
                    {
                      "_impl": {
                        "declaration": 386,
                        "isOffset": false,
                        "isSlot": false,
                        "src": "600:5:8",
                        "valueSize": 1
                      }
                    }
                  ],
                  "id": 399,
                  "nodeType": "InlineAssembly",
                  "operations": "{\n    let ptr := mload(0x40)\n    calldatacopy(ptr, 0, calldatasize())\n    let result := delegatecall(gas(), _impl, ptr, calldatasize(), 0, 0)\n    let size := returndatasize()\n    returndatacopy(ptr, 0, size)\n    switch result\n    case 0 {\n        revert(ptr, size)\n    }\n    default {\n        return(ptr, size)\n    }\n}",
                  "src": "462:376:8"
                }
              ]
            },
            "documentation": "@dev Fallback function for delegate call. This function will return whatever the implementaion call returns",
            "id": 401,
            "implemented": true,
            "isConstructor": false,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [],
                "id": 383,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 382,
                  "name": "onlyGov",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 67,
                  "src": "331:7:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "331:9:8"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 381,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "313:2:8"
            },
            "payable": true,
            "returnParameters": {
              "id": 384,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "340:0:8"
            },
            "scope": 402,
            "src": "304:534:8",
            "stateMutability": "payable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 403,
        "src": "106:734:8"
      }
    ],
    "src": "0:840:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.24+commit.e67f0147.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "2.0.1",
  "updatedAt": "2019-01-18T01:08:53.899Z"
}